{"version":3,"sources":["views/Base/Popovers/Popovers.js"],"names":["PopoverItem","props","toggle","bind","state","popoverOpen","this","setState","className","color","id","onClick","item","text","placement","isOpen","target","trigger","delay","Component","Popovers","popovers","href","rel","map","popover","i","key"],"mappings":"+SAGMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,MAAQ,CACXC,aAAa,GALE,E,qDAUjBC,KAAKC,SAAS,CACZF,aAAcC,KAAKF,MAAMC,gB,+BAK3B,OACE,8BACE,kBAAC,IAAD,CAAQG,UAAU,OAAOC,MAAM,YAAYC,GAAI,WAAaJ,KAAKL,MAAMS,GAAIC,QAASL,KAAKJ,QACtFI,KAAKL,MAAMW,KAAKC,MAEnB,kBAAC,IAAD,CAASC,UAAWR,KAAKL,MAAMW,KAAKE,UAAWC,OAAQT,KAAKF,MAAMC,YAAaW,OAAQ,WAAaV,KAAKL,MAAMS,GAAIR,OAAQI,KAAKJ,OAAQe,QAAQ,SAASC,MAAO,GAC9J,kBAAC,IAAD,sBACA,kBAAC,IAAD,sI,GAxBgBC,aA+BpBC,E,kDAEJ,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,MAAQ,CACXC,aAAa,EACbgB,SAAU,CACR,CACEP,UAAW,MACXD,KAAM,OAER,CACEC,UAAW,SACXD,KAAM,UAER,CACEC,UAAW,OACXD,KAAM,QAER,CACEC,UAAW,QACXD,KAAM,WArBK,E,qDA4BjBP,KAAKC,SAAS,CACZF,aAAcC,KAAKF,MAAMC,gB,+BAK3B,OACE,yBAAKG,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,UAAU,wBAA0B,4CACvC,yBAAKA,UAAU,uBACb,uBAAGc,KAAK,oDAAoDC,IAAI,sBAAsBP,OAAO,SAASR,UAAU,sBAC9G,2BAAOA,UAAU,cAAjB,WAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQE,GAAG,WAAWC,QAASL,KAAKJ,QAApC,kBAGA,kBAAC,IAAD,CAASY,UAAU,SAASC,OAAQT,KAAKF,MAAMC,YAAaW,OAAO,WAAWd,OAAQI,KAAKJ,QACzF,kBAAC,IAAD,sBACA,kBAAC,IAAD,mIAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGM,UAAU,wBAA0B,4CACvC,yCAEF,kBAAC,IAAD,KACGF,KAAKF,MAAMiB,SAASG,KAAI,SAACC,EAASC,GACjC,OAAO,kBAAC1B,EAAD,CAAa2B,IAAKD,EAAGd,KAAMa,EAASf,GAAIgB,c,GAhEtCP,aAyERC","file":"static/js/45.60640ad4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\n\nclass PopoverItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      popoverOpen: false,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen,\n    });\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Popover-' + this.props.id} onClick={this.toggle}>\n          {this.props.item.text}\n        </Button>\n        <Popover placement={this.props.item.placement} isOpen={this.state.popoverOpen} target={'Popover-' + this.props.id} toggle={this.toggle} trigger=\"legacy\" delay={0}>\n          <PopoverHeader>Popover Title</PopoverHeader>\n          <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\n        </Popover>\n      </span>\n    );\n  }\n}\n\nclass Popovers extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      popoverOpen: false,\n      popovers: [\n        {\n          placement: 'top',\n          text: 'Top',\n        },\n        {\n          placement: 'bottom',\n          text: 'Bottom',\n        },\n        {\n          placement: 'left',\n          text: 'Left',\n        },\n        {\n          placement: 'right',\n          text: 'Right',\n        },\n      ],\n    };\n  }\n\n  toggle() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Popovers</strong>\n            <div className=\"card-header-actions\">\n              <a href=\"https://reactstrap.github.io/components/popovers/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <Button id=\"Popover1\" onClick={this.toggle}>\n              Launch Popover\n            </Button>\n            <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.toggle}>\n              <PopoverHeader>Popover Title</PopoverHeader>\n              <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\n            </Popover>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Popovers</strong>\n            <small> list</small>\n          </CardHeader>\n          <CardBody>\n            {this.state.popovers.map((popover, i) => {\n              return <PopoverItem key={i} item={popover} id={i} />;\n            })}\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Popovers;\n"],"sourceRoot":""}